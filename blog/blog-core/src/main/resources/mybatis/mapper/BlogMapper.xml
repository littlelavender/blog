<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pianxian.blog.mapper.BlogMapper">

    <select id="findBlogById" parameterType="int" resultType="com.pianxian.blog.entity.Blog">
        SELECT * FROM blog.blog WHERE id = #{value}
    </select>

    <select id="findAllBlogsList" resultType="com.pianxian.blog.entity.Blog">
        SELECT
        id,
        title,
        summary,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        FROM
        blog.blog
    </select>

    <select id="findBlogsListByUserId" parameterType="int" resultType="com.pianxian.blog.entity.Blog">
        SELECT
        id,
        title,
        summary,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        FROM
        blog.blog
        WHERE
        user_id = #{value}
    </select>

    <insert id="insertBlog" parameterType="blog" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO blog.blog
        (
        title,
        summary,
        content,
        html_content,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        )
        VALUES
        (
        #{title},
        #{summary},
        #{content},
        #{htmlContent},
        #{userId},
        #{author},
        #{createTime},
        #{lastEditTime},
        #{readSize},
        #{commentSize},
        #{voteSize},
        #{catalogId}
        )
    </insert>

    <update id="updateBlog" parameterType="blog">
        UPDATE blog.blog
        SET
        title = #{title} ,
        summary = #{summary} ,
        content = #{content},
        html_content = #{htmlContent},
        user_id = #{userId},
        author = #{author},
        create_time =  #{createTime},
        last_edit_time = #{lastEditTime},
        read_size = #{readSize},
        comment_size = #{commentSize},
        vote_size = #{voteSize},
        catalog_id = #{catalogId}
        WHERE
        id = #{id}
    </update>

    <delete id="deleteBlog" parameterType="int">
        DELETE FROM blog.blog WHERE id = #{value}
    </delete>

    <select id="findAllBlogsListOrderByCreateTimeDesc" resultType="com.pianxian.blog.entity.Blog">
        SELECT
        id,
        title,
        summary,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        FROM
        blog.blog
        ORDER BY create_time DESC
    </select>

    <select id="findAllBlogsListOrderByCommentSizeAndVoteSizeAndReadSizeDesc" resultType="com.pianxian.blog.entity.Blog">
        SELECT
        id,
        title,
        summary,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        FROM
        blog.blog
        ORDER BY comment_size DESC, vote_size DESC, read_size DESC
    </select>

    <select id="findBlogsListByUserIdOrderByCreateTimeDesc" parameterType="int" resultType="com.pianxian.blog.entity.Blog">
        SELECT
        id,
        title,
        summary,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        FROM
        blog.blog
        WHERE user_id = #{userId}
        ORDER BY create_time DESC
    </select>

    <select id="findBlogsListByUserIdOrderByCommentSizeAndVoteSizeAndReadSizeDesc" parameterType="int" resultType="com.pianxian.blog.entity.Blog">
        SELECT
        id,
        title,
        summary,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        FROM
        blog.blog
        WHERE
        user_id = #{userId}
        ORDER BY
        comment_size DESC, vote_size DESC, read_size DESC
    </select>

    <select id="findBlogsListByUserIdAndTitleLike"  parameterType="blog" resultType="com.pianxian.blog.entity.Blog">
        SELECT
        id,
        title,
        summary,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        FROM
        blog.blog
        WHERE
        user_id = #{userId} AND title like '%${title}%'
    </select>

    <select id="findBlogsListByUserIdAndCatalogId"  parameterType="blog" resultType="com.pianxian.blog.entity.Blog">
        SELECT
        id,
        title,
        summary,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        FROM
        blog.blog
        WHERE
        user_id = #{userId} AND catalog_id = #{catalogId}
    </select>

    <select id="findBlogsListByUserIdAndCatalogIdOrderByCommentSizeAndVoteSizeAndReadSizeDesc"  parameterType="blog" resultType="com.pianxian.blog.entity.Blog">
        SELECT
        id,
        title,
        summary,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        FROM
        blog.blog
        WHERE
        user_id = #{userId} AND catalog_id = #{catalogId}
        ORDER BY
        comment_size DESC, vote_size DESC, read_size DESC
    </select>

    <select id="findBlogsListByUserIdAndCatalogIdOrderByCreateTimeDesc"  parameterType="blog" resultType="com.pianxian.blog.entity.Blog">
        SELECT
        id,
        title,
        summary,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        FROM
        blog.blog
        WHERE
        user_id = #{userId} AND catalog_id = #{catalogId}
        ORDER BY
        create_time DESC
    </select>

    <select id="findBlogsListByUserIdAndCatalogIdOrdeByCreateTimeDescOrCommentSizeAndVoteSizeAndReadSizeDesc" parameterType="map" resultType="com.pianxian.blog.entity.Blog">
        SELECT
        id,
        title,
        summary,
        user_id,
        author,
        create_time,
        last_edit_time,
        read_size,
        comment_size,
        vote_size,
        catalog_id
        FROM
        blog.blog
        <where>
            <if test="userId != null">
               AND user_id = #{userId}
            </if>
            <if test="catalogId != null">
                AND catalog_id = #{catalogId}
            </if>
        </where>
        <if test="order != null and order == 'new'">
            ORDER BY create_time DESC
        </if>
        <if test="order != null and order == 'hot'">
            ORDER BY comment_size DESC, vote_size DESC, read_size DESC
        </if>
    </select>

    <select id="countBlogsByUserId" parameterType="int" resultType="int">
        SELECT count(*) FROM blog.blog WHERE user_id=#{userId}
    </select>
</mapper>